# Default values for flux.


image:
  repository: docker.io/fluxcd/flux
  tag: 1.19.0
  pullPolicy: IfNotPresent
  pullSecret:

service:
  type: ClusterIP
  port: 3030

# Specifies which namespaces flux should have access to
allowedNamespaces: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
  # Annotations for the Service Account
  annotations: {}

# If create is `false` and no name is given, Flux will be restricted to
# namespaces listed in allowedNamespaces and the namespaces where it is
# deployed, and the kubeconfig default context will be set to that namespaces.
clusterRole:
  create: true
  # The name of a cluster role to bind to; if not set and create is
  # true, a name based on fullname is generated
  name:

resources:
  requests:
    cpu: 50m
    memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

extraVolumeMounts: []

extraVolumes: []

sync:
  # use `.sync.state: secret` to store flux's state as an annotation on the secret (instead of a git tag)
  state: git
  # Duration after which sync operations time out (defaults to 1m)
  timeout:
  # Controls how often Flux will apply whatâ€™s in git, to the cluster, absent new commits.
  # Reducing this interval below a minute or so may hinder Flux, since syncs can take tens of seconds,
  # leaving not much time to do other operations.
  #  interval: "5m"

git:
  # URL of git repo with Kubernetes manifests; e.g. git.url=ssh://git@github.com/fluxcd/flux-get-started
  url: "git@github.com:duyetdev/fluxd"
  # Branch of git repo to use for Kubernetes manifests
  branch: "master"
  # Path within git repo to locate Kubernetes manifests (relative path)
  path: "environments/dev"
  # Set to `true` if you intend for Flux to not be able to push changes to git.
  # Also configure state.mode to `secret` since storing state in a git tag will no longer be possible.
  readonly: false
  # Username to use as git committer
  user: "Weave Flux"
  # Email to use as git committer
  email: "support@weave.works"
  # If set, commits will be signed with this GPG key.
  signingKey: ""
  # If set, the signatures of the sync tag and commits will be verified.
  verifySignatures: false
  # If set, the author of git commits will reflect the user who initiated the commit and will differ from the git committer.
  setAuthor: false
  # Label to keep track of sync progress
  label: "flux-dev"
  # Append "[ci skip]" to commit messages so that CI will skip builds
  ciSkip: false
  # Period at which to poll git repo for new commits
  pollInterval: "1m"
  # Duration after which git operations time out
  timeout: "20s"
  # The secret name can be used to supply your own SSH key, instead of
  # relying on Flux to generate one for you:
  # 1. Generate a SSH key named identity: ssh-keygen -q -N "" -f ./identity
  # 2. Create a Kubernetes secret: kubectl -n flux create secret generic flux-ssh --from-file=./identity
  # 3. Delete the private key: rm ./identity
  # 4. Add ./identity.pub as a deployment key with write access in your Git repo
  # 5. Set the secret name (flux-ssh) below
  secretName: 'flux-ssh'
  # Global Git configuration See https://git-scm.com/docs/git-config for more details.
  config:
    enabled: false
    secretName: ""
    data: ""
    # data: |
    #   [credential "https://github.com"]
    #           username = foo

registry:
  # Period at which to check for updated images
  automationInterval: "1m"
